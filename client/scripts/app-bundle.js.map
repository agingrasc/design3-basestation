{"version":3,"sources":["app.js","environment.js","main.js","http/base-station-request.js","resources/index.js","services/timer.js","services/vision.js","components/competition/competition.js","components/debug/debug.js","components/go-to-position/go-to-position.js","components/informations/informations.js","components/navbar/navbar.js","components/robot-controller/robot-controller.js","/Users/jeansebastien/Google Drive/ulaval/hiver2017/GLO-3013/projet/design3-basestation/client/src/components/stat/stat.js","components/world-vision/world-vision-competition.js","components/world-vision/world-vision-debug.js"],"names":["App","configureRouter","config","router","title","navStrat","instruction","moduleId","fragment","href","map","route","name","nav","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BaseStationRequest","baseStationUrl","post","data","endpoint","fetch","method","headers","body","JSON","stringify","res","json","console","log","Timer","begin","time","startTimer","myVar","setInterval","myTimer","self","d","Date","valueOf","seconds","Math","floor","minutes","hours","slice","Vision","informations","undefined","imageView","world_information","origin","ratio","goto","ws","WebSocket","onopen","robotPositionRegisterMessage","send","onmessage","evt","parse","image","x","width","world","base_table","dimension","length","height","window","requestAnimationFrame","imagePath","obstacles","worldDimensions","round","parseFloat","unit","robot","position","y","orientation","theta","world_dimension","sent_dimension","checkReadyToStart","registerImageView","registerInformations","registerGotoPosition","registerGoto","Competition","Debug","GoToPosition","vision","httpClient","info","attached","pathfinder","buttonName","execute","xPosition","yPosition","Informations","timer","Navbar","RobotController","currentCommand","messageReceived","options","sendCommand","taskId","indexOf","toString","message","segmentedImage","WorldVisionCompetition","canvasId","x_position","y_position","chosen_x_position","chosen_y_position","canvas","document","getElementById","context","getContext","WorldVisionDebug","monPixel","visionProperties","addEventListener","mousePos","getMousePos","adjustPositions","resetPathRendering","mode","response","catch","err","resetDetection","rect","getBoundingClientRect","clientX","left","clientY","top","world_origin_x","world_origin_y","world_image_ratio"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n    configureRouter(config, router) {\n        config.title = 'Aurelia';\n        var navStrat = (instruction) => {\n            instruction.config.moduleId = instruction.fragment;\n            instruction.config.href = instruction.fragment;\n        };\n        config.map([{\n            route: ['', 'competition'],\n            name: 'competition',\n            moduleId: './components/competition/competition',\n            nav: true,\n            title: 'Competition'\n        }, {\n            route: 'debug',\n            name: 'debug',\n            moduleId: './components/debug/debug',\n            nav: true,\n            title: 'Debug'\n        }]);\n        this.router = router;\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class BaseStationRequest {\n    constructor() {\n        this.baseStationUrl = 'http://localhost:12345';\n    }\n\n    post(data, endpoint) {\n        fetch(this.baseStationUrl + endpoint, {\n                method: 'POST',\n                headers: {\n                    'content-type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            })\n            .then(function(res) {\n                return res.json();\n            })\n            .then(function(data) {\n                console.log(JSON.stringify(data));\n            });\n    }\n}\n","export function configure(config) {\n    //config.globalResources([]);\n}\n","export class Timer {\n    constructor() {\n        this.begin = 0;\n        this.time = \"Timer not started\";\n    }\n\n    startTimer() {\n        var myVar = setInterval(myTimer, 1000);\n        var self = this;\n        var d = new Date();\n        this.begin = d.valueOf();\n\n        function myTimer() {\n            var d = new Date();\n            var time = d.valueOf() - self.begin;\n            var seconds = Math.floor((time / 1000) % 60);\n            var minutes = Math.floor(((time / (1000 * 60)) % 60));\n            var hours = Math.floor(((time / (1000 * 60 * 60)) % 24));\n            self.time = (\"0\" + hours).slice(-2) + \":\" + (\"0\" + minutes).slice(-2) + \":\" + (\"0\" + seconds).slice(-2);\n        }\n    }\n}\n","export class Vision {\n    constructor() {\n        this.informations = undefined;\n        this.imageView = undefined;\n        this.world_information = undefined;\n        this.origin = undefined;\n        this.ratio = undefined;\n        this.goto = undefined;\n    }\n\n    start() {\n        let ws = new WebSocket('ws://localhost:3000');\n\n        ws.onopen = () => {\n            let robotPositionRegisterMessage = JSON.stringify({'headers': 'register_vision_data'});\n            ws.send(robotPositionRegisterMessage);\n        };\n\n        ws.onmessage = (evt) => {\n            let data = JSON.parse(evt.data);\n\n            if (data.image.origin.x !== \"\") {\n                this.world_information.origin = data.image.origin;\n                this.world_information.ratio = data.image.ratio;\n                this.goto.width = data.world.base_table.dimension.width;\n                this.goto.length = data.world.base_table.dimension.height;\n            }\n\n            window.requestAnimationFrame(() => {\n                this.imageView.imagePath = 'data:image/png;base64,' + data.image.data;\n            });\n\n            this.informations.obstacles = data.world.obstacles;\n\n            let world = data.world;\n\n            this.informations.worldDimensions = {\n                'width': Math.round(parseFloat(world.base_table.dimension.width)),\n                'length': Math.round(parseFloat(world.base_table.dimension.height)),\n                'unit': world.unit\n            };\n\n            // Update robot position\n            let robot = data.world.robot;\n            this.informations.robot = {\n                'position': {\n                    'x': robot.position.x,\n                    'y': robot.position.y\n                },\n                'orientation': robot.orientation\n            };\n\n            this.goto.robot = {\n                'position': {\n                    'x': robot.position.x,\n                    'y': robot.position.y,\n                    'theta': robot.theta\n                }\n            };\n\n            // Update world obstacles\n            this.goto.obstacles = [];\n\n            // Update world dimension\n            this.world_information.world_dimension = data.image.sent_dimension;\n        };\n    }\n\n    checkReadyToStart() {\n        if (this.imageView === undefined) {\n            return;\n        }\n        if (this.informations === undefined) {\n            return;\n        }\n        if (this.goto === undefined) {\n            return;\n        }\n        this.start();\n    }\n    registerImageView(imageView) {\n        this.imageView = imageView;\n        this.checkReadyToStart();\n    }\n\n    registerInformations(informations) {\n        this.informations = informations;\n        this.checkReadyToStart();\n    }\n\n    registerGotoPosition(world_information) {\n        this.world_information = world_information;\n    }\n\n    registerGoto(goto) {\n        console.log(goto);\n        this.goto = goto;\n        this.checkReadyToStart();\n    }\n}\n","export class Competition {}\n","export class Debug {}\n","import {\n    inject\n} from 'aurelia-framework';\n\nimport {\n    BaseStationRequest\n} from '../../http/base-station-request';\n\nimport {\n    bindable\n} from 'aurelia-framework';\n\nimport {\n    Vision\n} from '../../services/vision';\n\n@inject(Vision)\nexport class GoToPosition {\n\n    @bindable xPosition = 0;\n    @bindable yPosition = 0;\n    @bindable theta = 0\n    @bindable pathfinder = false;\n\n    constructor(vision) {\n        this.httpClient = new BaseStationRequest();\n        this.vision = vision;\n        this.info = {};\n        this.vision.registerGoto(this.info);\n    }\n\n    attached() {\n        if (!this.pathfinder) {\n            this.buttonName = 'go to pathfinder';\n            this.endpoint = '/go-to-pathfinder';\n        } else {\n            this.buttonName = 'go to position';\n            this.endpoint = '/go-to-position';\n        }\n    }\n\n    execute() {\n        let body = {\n            'destination': {\n                'x': this.xPosition,\n                'y': this.yPosition,\n                'theta': this.theta\n            }\n        };\n\n        console.log(body);\n\n        this.httpClient.post(body, this.endpoint);\n    }\n}\n","import {\n    inject\n}\nfrom 'aurelia-framework';\n\nimport {\n    Vision\n} from '../../services/vision';\n\nimport {\n    Timer\n} from '../../services/timer';\n\n@inject(Vision, Timer)\nexport class Informations {\n    constructor(vision, timer) {\n        this.timer = timer;\n        this.vision = vision;\n        this.informations = {};\n        this.informations.obstacles = [];\n    }\n\n    attached() {\n        this.vision.registerInformations(this.informations);\n    }\n}\n","export class Navbar {}\n","export class RobotController {\n  constructor() {\n    this.currentCommand = null;\n    this.messageReceived = false;\n    this.options = [\n      'competition',\n      'initial-orientation',\n      'identify-antenna',\n      'receive-information',\n      'go-to-image',\n      'take-picture',\n      'go-to-draw-zone',\n      'draw',\n      'go-out-of-draw-zone',\n      'light-red-led'\n    ];\n  }\n\n  sendCommand() {\n    const taskId = this.options.indexOf(this.currentCommand).toString();\n    const data = {'task_id': taskId};\n\n    this.messageReceived = false;\n\n    fetch(\"http://localhost:12345/start-tasks\", {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    }).then((res) => {\n        return res.json();\n    }).then((data) => {\n      if (data.message) {\n        this.message = 'command sent to robot';\n        this.messageReceived = true;\n      }\n\n      if (data.image) {\n        this.segmentedImage = data.image;\n      }\n    });\n\n  }\n}\n",null,"export class WorldVisionCompetition {\n\n    constructor() {\n        this.canvasId = \"monCanvas\";\n        this.x_position = 0;\n        this.y_position = 0;\n        this.imagePath = \"./src/components/world-vision/image14.jpg\";\n        this.chosen_x_position = 0;\n        this.chosen_y_position = 0;\n    }\n\n    attached() {\n        var canvas = document.getElementById(this.canvasId);\n        var context = canvas.getContext('2d');\n    }\n\n    start() {\n        console.log(\"Started\");\n    }\n}\n","import {\n    inject\n} from 'aurelia-framework';\n\nimport {\n    Vision\n} from '../../services/vision';\n\n@inject(Vision)\nexport class WorldVisionDebug {\n    constructor(vision) {\n        this.vision = vision;\n        this.monPixel = \"800\"\n\n        this.canvasId = 'monCanvas';\n\n        this.visionProperties = {};\n        this.visionProperties.imagePath = './src/components/world-vision/image14.jpg';\n\n        this.x_position = 0;\n        this.y_position = 0;\n\n        this.chosen_x_position = 0;\n        this.chosen_y_position = 0;\n\n        this.world_information = {};\n        this.theta = 0;\n    }\n\n    attached() {\n        let canvas = document.getElementById(this.canvasId);\n\n        canvas.addEventListener('mousemove', (evt) => {\n            let mousePos = this.getMousePos(canvas, evt);\n            this.adjustPositions(mousePos);\n        }, false);\n\n        canvas.addEventListener('click', (evt) => {\n            this.chosen_x_position = this.x_position;\n            this.chosen_y_position = this.y_position;\n        }, false);\n\n        this.vision.registerImageView(this.visionProperties);\n        this.vision.registerGotoPosition(this.world_information);\n    }\n\n    resetPathRendering() {\n        fetch('http://0.0.0.0:5000/vision/reset-rendering', {\n            method: \"POST\",\n            headers: {\n                'content-type': 'application/json'\n            },\n            mode: 'no-cors'\n        }).then(function (response) {\n            console.log(response);\n        }).catch(function (err) {\n            console.log(err);\n        });\n    }\n\n    resetDetection() {\n        fetch('http://0.0.0.0:5000/vision/reset-detection', {\n            method: \"POST\",\n            headers: {\n                'content-type': 'application/json'\n            },\n            mode: 'no-cors'\n        }).then(function (response) {\n            return response.json();\n        }).then(function(message) {\n            console.log(message);\n        }).catch(function (err) {\n            console.log(err);\n        });\n    }\n\n    getMousePos(canvas, evt) {\n        let rect = canvas.getBoundingClientRect();\n        return {\n            x: evt.clientX - rect.left,\n            y: evt.clientY - rect.top\n        };\n    }\n\n    adjustPositions(mousePos) {\n        let world_origin_x = parseFloat(this.world_information.origin.x);\n        let world_origin_y = parseFloat(this.world_information.origin.y);\n        let world_image_ratio = parseFloat(this.world_information.ratio);\n\n        this.x_position = Math.floor((mousePos.x - world_origin_x) * world_image_ratio * 10);\n        this.y_position = Math.floor((mousePos.y - world_origin_y) * world_image_ratio * 10);\n    }\n}\n"],"sourceRoot":"../src"}