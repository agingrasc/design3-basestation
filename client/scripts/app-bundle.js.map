{"version":3,"sources":["app.js","environment.js","main.js","components/go-to-position.js","http/base-station-request.js","resources/index.js"],"names":["App","message","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","GoToPosition","path","httpClient","xPosition","yPosition","execute","console","log","payload","x","y","data","JSON","stringify","post","BaseStationRequest","baseStationUrl","fetch","method","headers","body","res","json"],"mappings":";;;;;;;;;;;;;MAAaA,cAAAA,MACX,eAAc;AAAA;;AACZ,SAAKC,OAAL,GAAe,cAAf;AACD;;;;;;;;oBCHY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCSCC,YAAAA;;;;;;;;;;AANhBC,UAAQC,MAAR,CAAe;AACbC,cAAU;AACRC,wBAAkB;AADV;AADG,GAAf;;AAMO,WAASJ,SAAT,CAAmBK,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYV,KAAhB,EAAuB;AACrBO,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYV,OAAhB,EAAyB;AACvBM,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBC,IAAhB,CAAqB;AAAA,aAAMP,QAAQQ,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;;;;;;;;;QCnBYC,uBAAAA;AAET,gCAAc;AAAA;;AACV,iBAAKC,IAAL,GAAY,kBAAZ;AACA,iBAAKC,UAAL,GAAkB,4CAAlB;AACA,iBAAKC,SAAL,GAAiB,CAAjB;AACA,iBAAKC,SAAL,GAAiB,CAAjB;AACH;;+BAEDC,6BAAU;AACNC,oBAAQC,GAAR,CAAY,KAAKJ,SAAjB;AACAG,oBAAQC,GAAR,CAAY,KAAKH,SAAjB;AACA,gBAAII,UAAU;AACVC,mBAAG,KAAKN,SADE;AAEVO,mBAAG,KAAKN;AAFE,aAAd;AAIA,gBAAIO,OAAOC,KAAKC,SAAL,CAAeL,OAAf,CAAX;AACA,iBAAKN,UAAL,CAAgBY,IAAhB,CAAqBH,IAArB,EAA2B,KAAKV,IAAhC;AACH;;;;;;;;;;;;;;;;;;QCtBQc,6BAAAA;AAET,sCAAc;AAAA;;AACV,iBAAKC,cAAL,GAAsB,wBAAtB;AACH;;qCAEDF,qBAAKH,MAAMV,MAAM;AACbgB,kBAAM,KAAKD,cAAL,GAAsBf,IAA5B,EAAkC;AAC1BiB,wBAAQ,MADkB;AAE1BC,yBAAS;AACL,oCAAgB;AADX,iBAFiB;AAK1BC,sBAAMT;AALoB,aAAlC,EAOKb,IAPL,CAOU,UAASuB,GAAT,EAAc;AAChB,uBAAOA,IAAIC,IAAJ,EAAP;AACH,aATL,EAUKxB,IAVL,CAUU,UAASa,IAAT,EAAe;AACjBL,wBAAQC,GAAR,CAAYK,KAAKC,SAAL,CAAeF,IAAf,CAAZ;AACH,aAZL;AAaH;;;;;;;;;;;UCpBWzB,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.message = 'Hello World!';\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {\n    BaseStationRequest\n} from '../http/base-station-request';\n\nexport class GoToPosition {\n\n    constructor() {\n        this.path = \"/go-to-position/\";\n        this.httpClient = new BaseStationRequest();\n        this.xPosition = 0;\n        this.yPosition = 0;\n    }\n\n    execute() {\n        console.log(this.xPosition);\n        console.log(this.yPosition);\n        var payload = {\n            x: this.xPosition,\n            y: this.yPosition\n        };\n        var data = JSON.stringify(payload);\n        this.httpClient.post(data, this.path);\n    }\n}\n","export class BaseStationRequest {\n\n    constructor() {\n        this.baseStationUrl = \"http://localhost:12345\";\n    }\n\n    post(data, path) {\n        fetch(this.baseStationUrl + path, {\n                method: \"POST\",\n                headers: {\n                    'content-type': 'application/json'\n                },\n                body: data\n            })\n            .then(function(res) {\n                return res.json();\n            })\n            .then(function(data) {\n                console.log(JSON.stringify(data));\n            });\n    }\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}