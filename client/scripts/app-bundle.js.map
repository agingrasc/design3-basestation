{"version":3,"sources":["app.js","environment.js","main.js","http/base-station-request.js","resources/index.js","services/task.js","services/timer.js","services/vision.js","components/competition/competition.js","components/debug/debug.js","components/go-to-position/go-to-position.js","components/informations/informations.js","components/navbar/navbar.js","components/robot-controller/robot-controller.js","components/robot-feed/robot-feed.js","/Users/jeansebastien/Google Drive/ulaval/hiver2017/GLO-3013/projet/design3-basestation/client/src/components/stat/stat.js","components/world-vision/world-vision-competition.js","components/world-vision/world-vision-debug.js"],"names":["App","configureRouter","config","router","title","navStrat","instruction","moduleId","fragment","href","map","route","name","nav","debug","testing","configure","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","BaseStationRequest","baseStationUrl","post","data","endpoint","fetch","method","headers","body","JSON","stringify","res","json","responseData","console","log","Task","timer","undefined","tasks","ws","WebSocket","onopen","taskRegisterMessage","send","onmessage","evt","parse","splice","length","taskName","taskStatus","stringToBoolean","onCycleEnd","pause","push","snakeToCamel","colorFrom","startTask","resetTasks","registerInformations","registerCycleEnd","stringBoolean","status","s","charAt","toUpperCase","replace","m","slice","Timer","lastTime","isPause","isStarted","totalTime","time","Date","valueOf","currentLap","setInterval","updateTime","bind","timeDelta","seconds","Math","floor","minutes","stop","clearInterval","reset","Vision","informations","imageView","world_information","origin","ratio","goto","robotPositionRegisterMessage","image","x","width","world","base_table","dimension","height","window","requestAnimationFrame","imagePath","obstacles","worldDimensions","round","parseFloat","unit","robot","position","y","orientation","world_dimension","sent_dimension","setDestinationPosition","nextDestination","getDestinationPosition","checkReadyToStart","registerImageView","registerGotoPosition","worldInformation","registerGoto","Competition","Debug","GoToPosition","vision","httpClient","attached","pathfinder","buttonName","execute","Informations","task","task_information","resetDetection","mode","response","message","catch","err","resetPathRendering","colorFor","Navbar","showNavbar","setTimeout","RobotController","taskService","currentCommand","currentScaling","currentOrientation","messageReceived","showImage","fakeSegmentation","takePicture","showSegmentsCoordinates","robotOnline","taskSent","taskDone","options","scalings","orientations","event","segmentedImage","thresholdedImage","thresholded_image","setTaskDone","sendCommand","taskId","indexOf","toString","scaling","value","isTakePicture","fake_segmentation","isTaskCompetition","isLightRedLedTask","segmentsCoordinates","segments","coord","coordToString","onChange","currentTaskIndex","isDrawPicture","resetTask","stopTimer","pauseTimer","RobotFeed","WorldVisionCompetition","canvasId","x_position","y_position","chosen_x_position","chosen_y_position","canvas","document","getElementById","context","getContext","WorldVisionDebug","visionProperties","theta","addEventListener","mousePos","getMousePos","adjustPositions","rect","getBoundingClientRect","clientX","left","clientY","top","worldOriginX","worldOriginY","worldOriginRatio"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n    configureRouter(config, router) {\n        config.title = 'Aurelia';\n\n        let navStrat = (instruction) => {\n            instruction.config.moduleId = instruction.fragment;\n            instruction.config.href = instruction.fragment;\n        };\n\n        config.map([\n            {\n                route: ['', 'debug'],\n                name: 'debug',\n                moduleId: './components/debug/debug',\n                nav: true,\n                title: 'Debug'\n            }\n        ]);\n\n        this.router = router;\n    }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class BaseStationRequest {\n    constructor() {\n        this.baseStationUrl = 'http://localhost:12345';\n    }\n\n    post(data, endpoint) {\n        fetch(this.baseStationUrl + endpoint, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n        .then(function(res) {\n            return res.json();\n        })\n        .then(function(responseData) {\n            console.log(JSON.stringify(responseData));\n        });\n    }\n}\n","export function configure(config) {\n    //config.globalResources([]);\n}\n","import { inject } from 'aurelia-framework';\nimport { Timer } from './timer';\n\n@inject(Timer)\nexport class Task {\n    constructor(timer) {\n        this.timer = timer;\n        this.data = undefined;\n        this.tasks = [];\n    }\n\n    start() {\n        this.ws = new WebSocket('ws://localhost:3000');\n\n        this.ws.onopen = () => {\n            let taskRegisterMessage = JSON.stringify({ 'headers': 'register_task_data' });\n            this.ws.send(taskRegisterMessage);\n        };\n\n        this.ws.onmessage = (evt) => {\n            let data = JSON.parse(evt.data);\n            this.tasks.splice(0, this.tasks.length);\n\n            for (let taskName in data.data) {\n                let taskStatus = stringToBoolean(data.data[taskName]);\n\n                if (taskName === 'light_red_led') {\n                    if (taskStatus) {\n                        this.onCycleEnd();\n                        this.timer.pause();\n                    }\n                }\n\n                this.tasks.push({\n                    'name': snakeToCamel(taskName),\n                    'done': taskStatus,\n                    'color': colorFrom(taskStatus)\n                });\n            }\n        };\n    }\n\n    startTask() {\n        this.timer.start();\n    }\n\n    resetTasks() {\n        this.ws.send(JSON.stringify({ 'headers': 'reset_tasks' }));\n    }\n\n    registerInformations(data) {\n        this.tasks = data;\n    }\n\n    registerCycleEnd(onCycleEnd) {\n        this.onCycleEnd = onCycleEnd;\n        this.start();\n    }\n\n}\n\nfunction stringToBoolean(stringBoolean) {\n    if (stringBoolean === 'True') {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction colorFrom(status) {\n    if (status) {\n        return 'green';\n    } else {\n        return 'red';\n    }\n}\n\nfunction snakeToCamel(s) {\n    return s.charAt(0).toUpperCase() + s.replace(/(\\_\\w)/g, function(m) { return ' ' + m[1].toUpperCase(); }).slice(1);\n}\n","export class Timer {\n    constructor() {\n        this.lastTime = 0;\n        this.isPause = false;\n        this.isStarted = false;\n        this.totalTime = 0;\n        this.time = '00:00';\n    }\n\n    start() {\n        this.lastTime = new Date().valueOf();\n\n        if (!this.isStarted) {\n            this.currentLap = setInterval(this.updateTime.bind(this), 1000);\n            this.isStarted = true;\n        }\n    }\n\n    updateTime() {\n        let timeDelta = new Date().valueOf() - this.lastTime;\n\n        this.totalTime = this.totalTime + timeDelta;\n\n        let seconds = Math.floor((this.totalTime / 1000) % 60);\n        let minutes = Math.floor(((this.totalTime / (1000 * 60)) % 60));\n\n        this.lastTime = new Date().valueOf();\n\n        this.time = ('0' + minutes).slice(-2) + ':' + ('0' + seconds).slice(-2);\n    }\n\n    stop() {\n        clearInterval(this.currentLap);\n\n        this.isStarted = false;\n    }\n\n    reset() {\n        this.stop();\n        this.totalTime = 0;\n        this.time = '00:00';\n    }\n\n    pause() {\n        this.stop();\n    }\n}\n","export class Vision {\n    constructor() {\n        this.informations = {};\n        this.imageView = undefined;\n        this.world_information = undefined;\n        this.origin = undefined;\n        this.ratio = undefined;\n        this.goto = {};\n    }\n\n    start() {\n        this.ws = new WebSocket('ws://localhost:3000');\n\n        this.ws.onopen = () => {\n            let robotPositionRegisterMessage = JSON.stringify({ 'headers': 'register_vision_data' });\n            this.ws.send(robotPositionRegisterMessage);\n        };\n\n        this.ws.onmessage = (evt) => {\n            let data = JSON.parse(evt.data);\n\n            if (data.image.origin.x !== '') {\n                this.world_information.origin = data.image.origin;\n                this.world_information.ratio = data.image.ratio;\n                this.goto.width = data.world.base_table.dimension.width;\n                this.goto.length = data.world.base_table.dimension.height;\n            }\n\n            window.requestAnimationFrame(() => {\n                this.imageView.imagePath = 'data:image/jpeg;base64,' + data.image.data;\n            });\n\n            this.informations.obstacles = data.world.obstacles;\n\n            let world = data.world;\n            this.informations.worldDimensions = {\n                'width': Math.round(parseFloat(world.base_table.dimension.width)),\n                'length': Math.round(parseFloat(world.base_table.dimension.height)),\n                'unit': world.unit\n            };\n\n            // Update robot position\n            let robot = data.world.robot;\n            this.informations.robot = {\n                'position': {\n                    'x': robot.position.x,\n                    'y': robot.position.y\n                },\n                'orientation': robot.orientation\n            };\n\n            // Update world obstacles\n            this.goto.obstacles = [];\n\n            // Update world dimension\n            this.world_information.world_dimension = data.image.sent_dimension;\n        };\n    }\n\n    setDestinationPosition(nextDestination) {\n        this.goto = { 'destination': nextDestination };\n    }\n\n    getDestinationPosition() {\n        return this.goto;\n    }\n\n    checkReadyToStart() {\n        if (this.imageView === undefined) {\n            return;\n        }\n        if (this.informations === undefined) {\n            return;\n        }\n        if (this.goto === undefined) {\n            return;\n        }\n        this.start();\n    }\n\n    registerImageView(imageView) {\n        this.imageView = imageView;\n        this.checkReadyToStart();\n    }\n\n    registerInformations(informations) {\n        this.informations = informations;\n        this.checkReadyToStart();\n    }\n\n    registerGotoPosition(worldInformation) {\n        this.world_information = worldInformation;\n    }\n\n    registerGoto(goto) {\n        this.goto = goto;\n        this.checkReadyToStart();\n    }\n}\n","export class Competition {}\n","export class Debug {\n}\n","import { inject } from 'aurelia-framework';\nimport { bindable } from 'aurelia-framework';\n\nimport { BaseStationRequest } from '../../http/base-station-request';\nimport { Vision } from '../../services/vision';\n\n@inject(Vision)\nexport class GoToPosition {\n    @bindable pathfinder = true;\n\n    constructor(vision) {\n        this.httpClient = new BaseStationRequest();\n        this.vision = vision;\n    }\n\n    attached() {\n        if (this.pathfinder) {\n            this.buttonName = 'go to pathfinder';\n            this.endpoint = '/go-to-pathfinder';\n        } else {\n            this.buttonName = 'go to position';\n            this.endpoint = '/go-to-position';\n        }\n    }\n\n    execute() {\n        this.httpClient.post(this.vision.getDestinationPosition(), this.endpoint);\n    }\n}\n","import { inject } from 'aurelia-framework';\n\nimport { Vision } from '../../services/vision';\nimport { Timer } from '../../services/timer';\nimport { Task } from '../../services/task';\n\n@inject(Vision, Timer, Task)\nexport class Informations {\n    constructor(vision, timer, task) {\n        this.timer = timer;\n        this.vision = vision;\n        this.informations = {};\n        this.informations.obstacles = [];\n        this.task = task;\n        this.task_information = [];\n    }\n\n    attached() {\n        this.vision.registerInformations(this.informations);\n        this.task.registerInformations(this.task_information);\n    }\n\n    resetDetection() {\n        fetch('http://0.0.0.0:5000/vision/reset-detection', {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            mode: 'no-cors'\n        }).then(function(response) {\n            return response.json();\n        }).then(function(message) {\n            console.log(message);\n        }).catch(function(err) {\n            console.log(err);\n        });\n    }\n\n    resetPathRendering() {\n        fetch('http://0.0.0.0:5000/vision/reset-rendering', {\n            method: \"POST\",\n            headers: {\n                'content-type': 'application/json'\n            },\n            mode: 'no-cors'\n        })\n            .then((response) => {\n                console.log(response);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    colorFor(task) {\n        return 'red-text';\n    }\n}\n","export class Navbar {\n    constructor() {\n        this.showNavbar = true;\n    }\n\n    attached() {\n        setTimeout(() => {\n            this.showNavbar = false;\n        }, 3000);\n    }\n}\n","import { inject } from 'aurelia-framework';\n\nimport { Timer } from '../../services/timer';\nimport { Task } from '../../services/task';\n\n@inject(Timer, Task)\nexport class RobotController {\n  constructor(timer, task) {\n    this.timer = timer;\n    this.taskService = task;\n\n    this.currentCommand = null;\n    this.currentScaling = null;\n    this.currentOrientation = null;\n\n    this.messageReceived = false;\n    this.showImage = true;\n    this.fakeSegmentation = false;\n    this.takePicture = false;\n    this.showSegmentsCoordinates = false;\n    this.robotOnline = false;\n    this.taskSent = false;\n    this.taskDone = false;\n\n    this.options = [\n        '0 - Competition',\n        '1 - Initial Orientation',\n        '2 - Identify Antenna',\n        '3 - Receive Information',\n        '4 - Go to Image',\n        '5 - Take Picture',\n        '6 - Go to Drawing Area',\n        '7 - Draw Figure',\n        '8 - Go Out of Drawing Area',\n        '9 - Light Red Led',\n        '10 - Toggle Pencil',\n        '11 - Null',\n        '12 - Images Routine'\n    ];\n\n    this.scalings = [\n      { 'value': '1', 'name': '4' },\n      { 'value': '0.5', 'name': '2' }\n    ];\n\n    this.orientations = [\n      { 'value': 'SOUTH', 'name': 'SUD' },\n      { 'value': 'NORTH', 'name': 'NORD'},\n      { 'value': 'EAST', 'name': 'EST' },\n      { 'value': 'WEST', 'name': 'WEST'}\n    ];\n\n    this.ws = new WebSocket('ws://localhost:3000');\n\n    this.ws.onopen = () => {\n        this.ws.send(JSON.stringify({'headers': 'register_image_segmentation'}));\n        this.ws.send(JSON.stringify({'headers': 'register_robot_online'}));\n    };\n\n    this.ws.onmessage = (event) => {\n      let data = JSON.parse(event.data);\n\n      if (data.data === 'robot_online') {\n        this.robotOnline = true;\n      } else if (data.data === 'robot_offline') {\n        this.robotOnline = false;\n      } else if (data.data.image) {\n        this.segmentedImage = data.data.image;\n        this.thresholdedImage = data.data.thresholded_image;\n      }\n    };\n  }\n\n  attached() {\n    this.taskService.registerCycleEnd(this.setTaskDone.bind(this));\n  }\n\n  setTaskDone() {\n    this.taskDone = true;\n  }\n\n  sendCommand() {\n    const taskId = this.options.indexOf(this.currentCommand).toString();\n    const data = { 'task_id': taskId };\n\n    if (this.currentScaling) {\n      data.scaling = this.currentScaling.value;\n      data.orientation = this.currentOrientation.value;\n    }\n\n    if (isTakePicture(taskId) && this.fakeSegmentation) {\n      data.fake_segmentation = true;\n    } else if (isTaskCompetition(taskId)) {\n      this.taskSent = true;\n      this.taskDone = false;\n    } else if (isLightRedLedTask(taskId)) {\n      this.taskDone = true;\n      this.taskSent = false;\n    }\n\n    fetch('http://localhost:12345/start-tasks', {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(data)\n    })\n    .then((res) => res.json())\n    .then((responseData) => {\n      if (responseData.message) {\n        this.startTask();\n      }\n\n      if (responseData.image) {\n        this.segmentsCoordinates = responseData.segments.map((coord) => coordToString(coord));\n        this.segmentedImage = responseData.image;\n        this.thresholdedImage = responseData.thresholded_image;\n      }\n    });\n  }\n\n  onChange() {\n    const currentTaskIndex = this.options.indexOf(this.currentCommand);\n    if (isTakePicture(currentTaskIndex)) {\n      this.takePicture = true;\n      this.showImage = true;\n      this.showSegmentsCoordinates = false;\n    } else if (isDrawPicture(currentTaskIndex)) {\n      this.takePicture = false;\n      this.showImage = false;\n      this.showSegmentsCoordinates = true;\n    } else {\n      this.takePicture = false;\n      this.showSegmentsCoordinates = true;\n    }\n  }\n\n  startTask() {\n    this.timer.start();\n    this.taskSent = false;\n  }\n\n  resetTask() {\n    this.taskService.resetTasks(() => {\n      this.taskDone = false;\n    });\n  }\n\n  stopTimer() {\n    this.timer.stop();\n  }\n\n  pauseTimer() {\n    this.timer.pause();\n    this.taskDone = false;\n    this.taskSent = false;\n  }\n}\n\n\nfunction isTakePicture(taskId) {\n  return taskId === 5 || taskId === '5';\n}\n\nfunction isTaskCompetition(taskId) {\n  return taskId === 0 || taskId === '0';\n}\n\nfunction isDrawPicture(taskId) {\n  return taskId === 7 || taskId === '7';\n}\n\nfunction isLightRedLedTask(taskId) {\n  return taskId === 9 || taskId === '9';\n}\n\nfunction coordToString(coord) {\n  return [\n      Math.round(parseFloat(coord[0])),\n      Math.round(parseFloat(coord[1]))\n  ].toString();\n}\n","export class RobotFeed {\n    constructor() {\n        this.imagePath = 'img/placeholder_480x360.png';\n        this.ws = new WebSocket('ws://localhost:3000');\n\n        this.ws.onopen = () => {\n            let robotPositionRegisterMessage = JSON.stringify({ 'headers': 'register_to_robot_feed' });\n            this.ws.send(robotPositionRegisterMessage);\n        };\n\n        this.ws.onmessage = (event) => {\n            let data = JSON.parse(event.data);\n\n            window.requestAnimationFrame(() => {\n                this.imagePath = `data:image/jpeg;base64,${data.data.image}`;\n            });\n        };\n    }\n}\n",null,"export class WorldVisionCompetition {\n\n    constructor() {\n        this.canvasId = \"monCanvas\";\n        this.x_position = 0;\n        this.y_position = 0;\n        this.imagePath = \"./src/components/world-vision/image14.jpg\";\n        this.chosen_x_position = 0;\n        this.chosen_y_position = 0;\n    }\n\n    attached() {\n        var canvas = document.getElementById(this.canvasId);\n        var context = canvas.getContext('2d');\n    }\n\n    start() {\n        console.log(\"Started\");\n    }\n}\n","import { inject } from 'aurelia-framework';\nimport { Vision } from '../../services/vision';\n\n@inject(Vision)\nexport class WorldVisionDebug {\n    constructor(vision) {\n        this.vision = vision;\n\n        this.visionProperties = {\n            'imagePath': 'img/placeholder_640x400.png'\n        };\n\n        this.x_position = 0;\n        this.y_position = 0;\n\n        this.chosen_x_position = 0;\n        this.chosen_y_position = 0;\n\n        this.world_information = {};\n        this.theta = 0;\n    }\n\n    attached() {\n        let canvas = document.getElementById('world__feed');\n\n        canvas.addEventListener('mousemove', (evt) => {\n            let mousePos = this.getMousePos(canvas, evt);\n            this.adjustPositions(mousePos);\n        }, false);\n\n        canvas.addEventListener('click', (evt) => {\n            this.chosen_x_position = this.x_position;\n            this.chosen_y_position = this.y_position;\n\n            this.nextDestination = {\n                'x': this.chosen_x_position,\n                'y': this.chosen_y_position,\n                'theta': this.theta\n            };\n\n            this.vision.setDestinationPosition(this.nextDestination);\n        }, false);\n\n        this.vision.registerImageView(this.visionProperties);\n        this.vision.registerGotoPosition(this.world_information);\n    }\n\n    getMousePos(canvas, evt) {\n        let rect = canvas.getBoundingClientRect();\n        return {\n            x: evt.clientX - rect.left,\n            y: evt.clientY - rect.top\n        };\n    }\n\n    adjustPositions(mousePos) {\n        let worldOriginX = parseFloat(this.world_information.origin.x);\n        let worldOriginY = parseFloat(this.world_information.origin.y);\n        let worldOriginRatio = parseFloat(this.world_information.ratio);\n\n        this.x_position = Math.floor((mousePos.x - worldOriginX) * worldOriginRatio * 10);\n        this.y_position = Math.floor((mousePos.y - worldOriginY) * worldOriginRatio * 10);\n    }\n}\n"],"sourceRoot":"../src"}